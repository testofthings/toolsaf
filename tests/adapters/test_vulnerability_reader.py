import pytest
from pathlib import Path
from unittest.mock import MagicMock

from toolsaf.adapters.vulnerability_reader import VulnerabilityReader
from toolsaf.core.components import Software
from toolsaf.common.property import PropertyKey
from toolsaf.common.verdict import Verdict
from tests.test_model import Setup


@pytest.mark.parametrize(
    "spec, exp",
    [(Software, True), (Setup, False)]
)
def test_filter_component(spec, exp):
    reader = VulnerabilityReader(Setup().get_system())
    mock = MagicMock(spec=spec)
    assert reader.filter_component(mock) == exp


def test_process_component():
    setup = Setup()
    reader = VulnerabilityReader(setup.get_system())

    device = setup.system.device("Device")
    software = device.software().sw

    with Path("tests/samples/vulnerabilities/device.csv").open("rb") as f:
        reader.process_component(software, f, setup.get_inspector(), MagicMock())

        assert len(software.properties) == 3
        key1 = PropertyKey("vulnz", "test1", "cve-1")
        key2 = PropertyKey("vulnz", "test2", "cve-2")
        assert software.properties[key1].verdict == Verdict.FAIL
        assert software.properties[key1].explanation == "CVSS: 6.2"
        assert software.properties[key2].verdict == Verdict.FAIL
        assert software.properties[key2].explanation == "CVSS: 4.3"